{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golai\\\\OneDrive\\\\Desktop\\\\salvus-sequr-react-app\\\\salvus-sequr\\\\frontend\\\\src\\\\DataEntryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport \"./DataEntryForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataEntryForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    blemacid: \"\",\n    wallet_type: \"\",\n    walletcolor: \"\",\n    manufacturingdate: new Date().toISOString().split(\"T\")[0],\n    batchnum: \"012003202102\",\n    countrycode: \"890\",\n    qrcode: \"\",\n    barcodeno: \"\",\n    version: \"\"\n  });\n  const [macIdToDelete, setMacIdToDelete] = useState(\"\");\n  const [submitButtonText, setSubmitButtonText] = useState(\"Submit\");\n  const [notification, setNotification] = useState(null);\n  const [locationUrls, setLocationUrls] = useState({\n    barcode_location: \"\",\n    qrcode_location: \"\"\n  });\n  const [productTypes, setProductTypes] = useState([]);\n  const [walletColors, setWalletColors] = useState([]);\n  const [versions, setVersions] = useState([]);\n  useEffect(() => {\n    // Fetch product types\n    axios.get(\"http://localhost:5000/api/product-types\").then(response => setProductTypes(response.data)).catch(error => console.error(\"Error fetching product types:\", error));\n\n    // Fetch wallet colors\n    axios.get(\"http://localhost:5000/api/wallet-colors\").then(response => setWalletColors(response.data)).catch(error => console.error(\"Error fetching wallet colors:\", error));\n\n    // Fetch versions\n    axios.get(\"http://localhost:5000/api/versions\").then(response => setVersions(response.data)).catch(error => console.error(\"Error fetching versions:\", error));\n    const lastUsedQRCode = localStorage.getItem(\"lastUsedQRCode\") || \"00000\";\n    const lastUsedBarcode = localStorage.getItem(\"lastUsedBarcode\") || \"\";\n    setFormData(prevData => ({\n      ...prevData,\n      qrcode: lastUsedQRCode,\n      barcodeno: lastUsedBarcode\n    }));\n  }, []);\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedFormData = {\n      ...formData,\n      [name]: value\n    };\n    if (name === \"qrcode\") {\n      const countryCode = \"890\";\n      const currentYear = new Date().getFullYear();\n      const barcodeno = `${countryCode}${currentYear}${value}`;\n      updatedFormData = {\n        ...updatedFormData,\n        barcodeno\n      };\n    }\n    setFormData(updatedFormData);\n  }, [formData]);\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    const requiredFields = [\"blemacid\", \"wallet_type\", \"walletcolor\", \"batchnum\", \"version\"];\n    const isFormValid = requiredFields.every(field => formData[field].trim() !== \"\");\n    if (!isFormValid) {\n      showNotification(\"Please fill in all required fields\", \"error\");\n      return;\n    }\n    if (!validateBleMacIdFormat(formData.blemacid)) {\n      showNotification(\"Invalid BLE MAC ID format\", \"error\");\n      return;\n    }\n    try {\n      // Check if the same blemacid already exists in the table\n      const checkDuplicateResponse = await axios.get(`http://localhost:5000/api/check-duplicate/${formData.blemacid}`);\n      if (checkDuplicateResponse.data.duplicate) {\n        showNotification(\"Duplicate entry: Blemacid already exists\", \"error\");\n        return;\n      }\n\n      // Continue with data submission if not a duplicate\n      const response = await axios.post(\"http://localhost:5000/api/data-entry\", {\n        ...formData,\n        ...locationUrls\n      });\n\n      // Check if the data entry was successful\n      if (response.data.message === \"Record(s) inserted successfully into data_entry table\") {\n        // Trigger code generation\n        const generateCodesResponse = await axios.post(\"http://localhost:5000/api/generate-codes\", {\n          ...formData\n        });\n\n        // Log the message from the code generation response\n        console.log(generateCodesResponse.data.message);\n      }\n\n      // Update local storage and reset form data\n      const nextQRCodeValue = String(Number(formData.qrcode) + 1).padStart(5, \"0\");\n      localStorage.setItem(\"lastUsedQRCode\", nextQRCodeValue);\n      const countryCode = \"890\";\n      const currentYear = new Date().getFullYear();\n      const nextBarcodeValue = `${countryCode}${currentYear}${nextQRCodeValue}`;\n      localStorage.setItem(\"lastUsedBarcode\", nextBarcodeValue);\n      setFormData({\n        blemacid: \"\",\n        wallet_type: \"\",\n        walletcolor: \"\",\n        manufacturingdate: new Date().toISOString().split(\"T\")[0],\n        batchnum: \"012003202102\",\n        countrycode: \"890\",\n        qrcode: nextQRCodeValue,\n        barcodeno: nextBarcodeValue,\n        version: \"\"\n      });\n      showNotification(\"Data added successfully\", \"success\");\n    } catch (error) {\n      console.error(\"Error submitting data:\", error.message);\n      if (error.response && error.response.status === 409) {\n        showNotification(\"Duplicate entry: Blemacid already exists\", \"error\");\n      } else {\n        showNotification(\"Error submitting data\", \"error\");\n      }\n    }\n  }, [formData, locationUrls]);\n  const handleDelete = useCallback(async macId => {\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/delete-data/${macId}`);\n      showNotification(response.data.message, \"success\");\n      setMacIdToDelete(\"\");\n    } catch (error) {\n      console.error(\"Error deleting data:\", error.message);\n      showNotification(\"Error deleting data\", \"error\");\n    }\n  }, []);\n  const handlePrint = useCallback(() => {\n    window.print();\n  }, []);\n  const validateBleMacIdFormat = useCallback(macId => {\n    const macIdRegex = /^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$/;\n    return macIdRegex.test(macId);\n  }, []);\n  const showNotification = useCallback((message, type = \"success\") => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification(null);\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-entry-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"BLE MAC ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"blemacid\",\n                value: formData.blemacid,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"PRODUCT TYPE:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"wallet_type\",\n                value: formData.wallet_type,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), productTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: type.name,\n                  children: type.name\n                }, type.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"WALLET COLOR:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"walletcolor\",\n                value: formData.walletcolor,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), walletColors.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: color.name,\n                  children: color.name\n                }, color.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"BATCH NUMBER:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"batchnum\",\n                value: formData.batchnum,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"QR CODE:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"qrcode\",\n                value: formData.qrcode,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"BARCODE NO:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"barcodeno\",\n                value: formData.barcodeno,\n                onChange: handleChange,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"VERSION:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"version\",\n                value: formData.version,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select version\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), versions.map(ver => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: ver.version_number,\n                  children: ver.version_number\n                }, ver.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"ENTER MAC ID TO DELETE:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"macIdToDelete\",\n                value: macIdToDelete,\n                onChange: e => setMacIdToDelete(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: submitButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDelete(macIdToDelete),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handlePrint,\n          children: \"Print\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(DataEntryForm, \"om4+WIFXFHq5LMLLrpOD4AuUCA0=\");\n_c = DataEntryForm;\nexport default DataEntryForm;\nvar _c;\n$RefreshReg$(_c, \"DataEntryForm\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","DataEntryForm","_s","formData","setFormData","blemacid","wallet_type","walletcolor","manufacturingdate","Date","toISOString","split","batchnum","countrycode","qrcode","barcodeno","version","macIdToDelete","setMacIdToDelete","submitButtonText","setSubmitButtonText","notification","setNotification","locationUrls","setLocationUrls","barcode_location","qrcode_location","productTypes","setProductTypes","walletColors","setWalletColors","versions","setVersions","get","then","response","data","catch","error","console","lastUsedQRCode","localStorage","getItem","lastUsedBarcode","prevData","handleChange","e","name","value","target","updatedFormData","countryCode","currentYear","getFullYear","handleSubmit","preventDefault","requiredFields","isFormValid","every","field","trim","showNotification","validateBleMacIdFormat","checkDuplicateResponse","duplicate","post","message","generateCodesResponse","log","nextQRCodeValue","String","Number","padStart","setItem","nextBarcodeValue","status","handleDelete","macId","delete","handlePrint","window","print","macIdRegex","test","type","setTimeout","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","id","color","readOnly","ver","version_number","onClick","_c","$RefreshReg$"],"sources":["C:/Users/golai/OneDrive/Desktop/salvus-sequr-react-app/salvus-sequr/frontend/src/DataEntryForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./DataEntryForm.css\";\r\n\r\nconst DataEntryForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    blemacid: \"\",\r\n    wallet_type: \"\",\r\n    walletcolor: \"\",\r\n    manufacturingdate: new Date().toISOString().split(\"T\")[0],\r\n    batchnum: \"012003202102\",\r\n    countrycode: \"890\",\r\n    qrcode: \"\",\r\n    barcodeno: \"\",\r\n    version: \"\",\r\n  });\r\n\r\n  const [macIdToDelete, setMacIdToDelete] = useState(\"\");\r\n  const [submitButtonText, setSubmitButtonText] = useState(\"Submit\");\r\n  const [notification, setNotification] = useState(null);\r\n  const [locationUrls, setLocationUrls] = useState({\r\n    barcode_location: \"\",\r\n    qrcode_location: \"\",\r\n  });\r\n\r\n  const [productTypes, setProductTypes] = useState([]);\r\n  const [walletColors, setWalletColors] = useState([]);\r\n  const [versions, setVersions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch product types\r\n    axios.get(\"http://localhost:5000/api/product-types\")\r\n      .then(response => setProductTypes(response.data))\r\n      .catch(error => console.error(\"Error fetching product types:\", error));\r\n\r\n    // Fetch wallet colors\r\n    axios.get(\"http://localhost:5000/api/wallet-colors\")\r\n      .then(response => setWalletColors(response.data))\r\n      .catch(error => console.error(\"Error fetching wallet colors:\", error));\r\n\r\n    // Fetch versions\r\n    axios.get(\"http://localhost:5000/api/versions\")\r\n      .then(response => setVersions(response.data))\r\n      .catch(error => console.error(\"Error fetching versions:\", error));\r\n\r\n    const lastUsedQRCode = localStorage.getItem(\"lastUsedQRCode\") || \"00000\";\r\n    const lastUsedBarcode = localStorage.getItem(\"lastUsedBarcode\") || \"\";\r\n\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      qrcode: lastUsedQRCode,\r\n      barcodeno: lastUsedBarcode,\r\n    }));\r\n  }, []);\r\n\r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    let updatedFormData = { ...formData, [name]: value };\r\n\r\n    if (name === \"qrcode\") {\r\n      const countryCode = \"890\";\r\n      const currentYear = new Date().getFullYear();\r\n      const barcodeno = `${countryCode}${currentYear}${value}`;\r\n      updatedFormData = { ...updatedFormData, barcodeno };\r\n    }\r\n\r\n    setFormData(updatedFormData);\r\n  }, [formData]);\r\n\r\n  const handleSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n\r\n    const requiredFields = [\"blemacid\", \"wallet_type\", \"walletcolor\", \"batchnum\", \"version\"];\r\n    const isFormValid = requiredFields.every((field) => formData[field].trim() !== \"\");\r\n\r\n    if (!isFormValid) {\r\n      showNotification(\"Please fill in all required fields\", \"error\");\r\n      return;\r\n    }\r\n    if (!validateBleMacIdFormat(formData.blemacid)) {\r\n      showNotification(\"Invalid BLE MAC ID format\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Check if the same blemacid already exists in the table\r\n      const checkDuplicateResponse = await axios.get(`http://localhost:5000/api/check-duplicate/${formData.blemacid}`);\r\n      if (checkDuplicateResponse.data.duplicate) {\r\n        showNotification(\"Duplicate entry: Blemacid already exists\", \"error\");\r\n        return;\r\n      }\r\n\r\n      // Continue with data submission if not a duplicate\r\n      const response = await axios.post(\"http://localhost:5000/api/data-entry\", {\r\n        ...formData,\r\n        ...locationUrls,\r\n      });\r\n\r\n      // Check if the data entry was successful\r\n      if (response.data.message === \"Record(s) inserted successfully into data_entry table\") {\r\n        // Trigger code generation\r\n        const generateCodesResponse = await axios.post(\"http://localhost:5000/api/generate-codes\", {\r\n          ...formData,\r\n        });\r\n\r\n        // Log the message from the code generation response\r\n        console.log(generateCodesResponse.data.message);\r\n      }\r\n\r\n      // Update local storage and reset form data\r\n      const nextQRCodeValue = String(Number(formData.qrcode) + 1).padStart(5, \"0\");\r\n      localStorage.setItem(\"lastUsedQRCode\", nextQRCodeValue);\r\n\r\n      const countryCode = \"890\";\r\n      const currentYear = new Date().getFullYear();\r\n      const nextBarcodeValue = `${countryCode}${currentYear}${nextQRCodeValue}`;\r\n      localStorage.setItem(\"lastUsedBarcode\", nextBarcodeValue);\r\n\r\n      setFormData({\r\n        blemacid: \"\",\r\n        wallet_type: \"\",\r\n        walletcolor: \"\",\r\n        manufacturingdate: new Date().toISOString().split(\"T\")[0],\r\n        batchnum: \"012003202102\",\r\n        countrycode: \"890\",\r\n        qrcode: nextQRCodeValue,\r\n        barcodeno: nextBarcodeValue,\r\n        version: \"\",\r\n      });\r\n\r\n      showNotification(\"Data added successfully\", \"success\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting data:\", error.message);\r\n\r\n      if (error.response && error.response.status === 409) {\r\n        showNotification(\"Duplicate entry: Blemacid already exists\", \"error\");\r\n      } else {\r\n        showNotification(\"Error submitting data\", \"error\");\r\n      }\r\n    }\r\n  }, [formData, locationUrls]);\r\n\r\n  const handleDelete = useCallback(async (macId) => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:5000/api/delete-data/${macId}`);\r\n      showNotification(response.data.message, \"success\");\r\n      setMacIdToDelete(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting data:\", error.message);\r\n      showNotification(\"Error deleting data\", \"error\");\r\n    }\r\n  }, []);\r\n\r\n  const handlePrint = useCallback(() => {\r\n    window.print();\r\n  }, []);\r\n\r\n  const validateBleMacIdFormat = useCallback((macId) => {\r\n    const macIdRegex = /^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$/;\r\n    return macIdRegex.test(macId);\r\n  }, []);\r\n\r\n  const showNotification = useCallback((message, type = \"success\") => {\r\n    setNotification({ message, type });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 3000);\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <table className=\"data-entry-table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <h2>BLE MAC ID:</h2>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"blemacid\"\r\n                  value={formData.blemacid}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h2>PRODUCT TYPE:</h2>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  name=\"wallet_type\"\r\n                  value={formData.wallet_type}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">Select type</option>\r\n                  {productTypes.map((type) => (\r\n                    <option key={type.id} value={type.name}>{type.name}</option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h2>WALLET COLOR:</h2>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  name=\"walletcolor\"\r\n                  value={formData.walletcolor}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">Select color</option>\r\n                  {walletColors.map((color) => (\r\n                    <option key={color.id} value={color.name}>{color.name}</option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h2>BATCH NUMBER:</h2>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"batchnum\"\r\n                  value={formData.batchnum}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h2>QR CODE:</h2>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"qrcode\"\r\n                  value={formData.qrcode}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h2>BARCODE NO:</h2>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"barcodeno\"\r\n                  value={formData.barcodeno}\r\n                  onChange={handleChange}\r\n                  readOnly\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h2>VERSION:</h2>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  name=\"version\"\r\n                  value={formData.version}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">Select version</option>\r\n                  {versions.map((ver) => (\r\n                    <option key={ver.id} value={ver.version_number}>{ver.version_number}</option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h2>ENTER MAC ID TO DELETE:</h2>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"macIdToDelete\"\r\n                  value={macIdToDelete}\r\n                  onChange={(e) => setMacIdToDelete(e.target.value)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"button-container\">\r\n          <button type=\"submit\">{submitButtonText}</button>\r\n          <button type=\"button\" onClick={() => handleDelete(macIdToDelete)}>\r\n            Delete\r\n          </button>\r\n          <button type=\"button\" onClick={handlePrint}>\r\n            Print\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DataEntryForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}