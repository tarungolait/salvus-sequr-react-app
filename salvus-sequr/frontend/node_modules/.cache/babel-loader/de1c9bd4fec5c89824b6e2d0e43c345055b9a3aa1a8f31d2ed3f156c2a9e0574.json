{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golai\\\\OneDrive\\\\Desktop\\\\salvus-sequr-react-app\\\\salvus-sequr\\\\frontend\\\\src\\\\ProductTypesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProductTypesPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductTypesPage = () => {\n  _s();\n  const [productTypes, setProductTypes] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch data from the backend when the component mounts\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/new-product-types');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch product types. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!Array.isArray(data)) {\n        throw new Error('Invalid data structure received. Expected an array.');\n      }\n      setProductTypes(data);\n      setError(null); // Clear any previous errors\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setProductTypes([]); // Clear productTypes in case of an error\n      setError('Failed to fetch product types. Please try again later.');\n    }\n  };\n  const renderTableRows = () => {\n    return productTypes.map(productType => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `productType${productType.id}`,\n          value: productType.wallet_type,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: `description${productType.id}`,\n          value: productType.description,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, productType.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-types-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"product-types-form\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductTypesPage, \"myUs52oYGRY7bkuXPdmNWFVbxa8=\");\n_c = ProductTypesPage;\nexport default ProductTypesPage;\nvar _c;\n$RefreshReg$(_c, \"ProductTypesPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductTypesPage","_s","productTypes","setProductTypes","error","setError","fetchData","response","fetch","ok","Error","status","data","json","Array","isArray","console","renderTableRows","map","productType","children","type","name","id","value","wallet_type","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","description","className","_c","$RefreshReg$"],"sources":["C:/Users/golai/OneDrive/Desktop/salvus-sequr-react-app/salvus-sequr/frontend/src/ProductTypesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ProductTypesPage.css';\r\n\r\nconst ProductTypesPage = () => {\r\n  const [productTypes, setProductTypes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the backend when the component mounts\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/new-product-types');\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch product types. Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!Array.isArray(data)) {\r\n        throw new Error('Invalid data structure received. Expected an array.');\r\n      }\r\n\r\n      setProductTypes(data);\r\n      setError(null); // Clear any previous errors\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setProductTypes([]); // Clear productTypes in case of an error\r\n      setError('Failed to fetch product types. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    return productTypes.map((productType) => (\r\n      <tr key={productType.id}>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            name={`productType${productType.id}`}\r\n            value={productType.wallet_type}\r\n            readOnly\r\n          />\r\n        </td>\r\n        <td>\r\n          <textarea\r\n            name={`description${productType.id}`}\r\n            value={productType.description}\r\n            readOnly\r\n          ></textarea>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-types-container\">\r\n      <h2>Product Types</h2>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <form className=\"product-types-form\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Product Type</th>\r\n              <th>Description</th>\r\n              {/* Add more table headers if needed */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{renderTableRows()}</tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTypesPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}