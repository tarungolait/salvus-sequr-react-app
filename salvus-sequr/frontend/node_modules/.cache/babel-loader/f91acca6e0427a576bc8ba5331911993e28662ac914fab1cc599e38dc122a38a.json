{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golai\\\\OneDrive\\\\Desktop\\\\salvus-sequr-react-app\\\\salvus-sequr\\\\frontend\\\\src\\\\ProductTypesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProductTypesPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductTypesPage = () => {\n  _s();\n  const [productTypes, setProductTypes] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/new-product-types');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch product types. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!Array.isArray(data)) {\n        throw new Error('Invalid data structure received. Expected an array.');\n      }\n      setProductTypes(data);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setProductTypes([]);\n      setError('Failed to fetch product types. Please try again later.');\n    }\n  };\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n  const handleInputChange = (e, id, field) => {\n    const updatedProductTypes = productTypes.map(productType => {\n      if (productType.id === id) {\n        return {\n          ...productType,\n          [field]: e.target.value\n        };\n      }\n      return productType;\n    });\n    setProductTypes(updatedProductTypes);\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/update-product-types', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productTypes)\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to update product types. Status: ${response.status}`);\n      }\n      setEditMode(false);\n      setError(null);\n    } catch (error) {\n      console.error('Error submitting changes:', error);\n      setError('Failed to submit changes. Please try again later.');\n    }\n  };\n  const renderTableRows = () => {\n    return productTypes.map(productType => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `productType${productType.id}`,\n          value: productType.wallet_type,\n          onChange: e => handleInputChange(e, productType.id, 'wallet_type')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : productType.wallet_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: editMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: `description${productType.id}`,\n          value: productType.description,\n          onChange: e => handleInputChange(e, productType.id, 'description')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : productType.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, productType.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-types-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-mode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleEditMode,\n        children: editMode ? 'Save Changes' : 'Edit Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"product-types-form\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductTypesPage, \"GGW61G6NflfnYIfdCj2jKUwn/ng=\");\n_c = ProductTypesPage;\nexport default ProductTypesPage;\nvar _c;\n$RefreshReg$(_c, \"ProductTypesPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductTypesPage","_s","productTypes","setProductTypes","editMode","setEditMode","error","setError","fetchData","response","fetch","ok","Error","status","data","json","Array","isArray","console","toggleEditMode","handleInputChange","e","id","field","updatedProductTypes","map","productType","target","value","handleSubmit","method","headers","body","JSON","stringify","renderTableRows","children","type","name","wallet_type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","description","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/golai/OneDrive/Desktop/salvus-sequr-react-app/salvus-sequr/frontend/src/ProductTypesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ProductTypesPage.css';\r\n\r\nconst ProductTypesPage = () => {\r\n  const [productTypes, setProductTypes] = useState([]);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/new-product-types');\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch product types. Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!Array.isArray(data)) {\r\n        throw new Error('Invalid data structure received. Expected an array.');\r\n      }\r\n\r\n      setProductTypes(data);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setProductTypes([]);\r\n      setError('Failed to fetch product types. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const toggleEditMode = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const handleInputChange = (e, id, field) => {\r\n    const updatedProductTypes = productTypes.map((productType) => {\r\n      if (productType.id === id) {\r\n        return {\r\n          ...productType,\r\n          [field]: e.target.value,\r\n        };\r\n      }\r\n      return productType;\r\n    });\r\n\r\n    setProductTypes(updatedProductTypes);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/update-product-types', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(productTypes),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to update product types. Status: ${response.status}`);\r\n      }\r\n\r\n      setEditMode(false);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error submitting changes:', error);\r\n      setError('Failed to submit changes. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const renderTableRows = () => {\r\n    return productTypes.map((productType) => (\r\n      <tr key={productType.id}>\r\n        <td>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              name={`productType${productType.id}`}\r\n              value={productType.wallet_type}\r\n              onChange={(e) => handleInputChange(e, productType.id, 'wallet_type')}\r\n            />\r\n          ) : (\r\n            productType.wallet_type\r\n          )}\r\n        </td>\r\n        <td>\r\n          {editMode ? (\r\n            <textarea\r\n              name={`description${productType.id}`}\r\n              value={productType.description}\r\n              onChange={(e) => handleInputChange(e, productType.id, 'description')}\r\n            ></textarea>\r\n          ) : (\r\n            productType.description\r\n          )}\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-types-container\">\r\n      <h2>Product Types</h2>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"edit-mode-toggle\">\r\n        <button onClick={toggleEditMode}>\r\n          {editMode ? 'Save Changes' : 'Edit Mode'}\r\n        </button>\r\n        {editMode && <button onClick={handleSubmit}>Submit Changes</button>}\r\n      </div>\r\n\r\n      <form className=\"product-types-form\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Product Type</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{renderTableRows()}</tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTypesPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}